services:

  minio:
    image: minio/minio@sha256:d051d800a3025588f37f69f132bb5ef718547a9a4ee95ddee44e04ad952a0a96
    container_name: minio-osd
    command: server /data --console-address ':9001' --address ':9000'
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: $MINIO_ACCESS_KEY
      MINIO_ROOT_PASSWORD: $MINIO_SECRET_KEY
    volumes:
      - minio_data:/data
    healthcheck:
      test: curl -f --output /dev/null --silent http://localhost:9000/minio/health/live
      interval: 10s
      timeout: 2s
      retries: 3


  # minio-bucket-creator:
  #   image: minio/mc
  #   container_name: minio-bucket-creator-osd
  #   entrypoint: sh
  #   command: >
  #     mc config host add minio http://minio:9000 
  #     $MINIO_ACCESS_KEY $MINIO_SECRET_KEY 
  #     && mc mb minio/$MINIO_BUCKET_NAME
  #   depends_on:
  #     minio:
  #       condition: service_healthy


  python-bucket-creator:
    build: minio-bucket-creator
    container_name: python-bucket-creator-geo
    environment:
      AWS_ACCESS_KEY: $MINIO_ACCESS_KEY
      AWS_SECRET_KEY: $MINIO_SECRET_KEY
      MINIO_SERVER: "http://minio:9000"
      BUCKET_NAME: $MINIO_BUCKET_NAME

      DESTINATION__FILESYSTEM__BUCKET_URL: "s3://$MINIO_BUCKET_NAME"
      DESTINATION__FILESYSTEM__AWS_ENDPOINT_URL: "http://minio:9000"
      DESTINATION__FILESYSTEM__AWS_ACCESS_KEY_ID: $MINIO_ACCESS_KEY
      DESTINATION__FILESYSTEM__AWS_SECRET_ACCESS_KEY: $MINIO_SECRET_KEY
    depends_on:
      minio:
        condition: service_healthy



  postgis:
    image: postgis/postgis:17-3.5
    container_name: postgis-osd
    environment:
      POSTGIS_PASSWORD: $POSTGRES_PASSWORD
      POSTGIS_USER: $POSTGRES_USER
      POSTGIS_DB: $POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  dremio:
    image: dremio/dremio-oss:26.0 # Or specify a particular version
    container_name: dremio-osd
    ports:
      - "9047:9047" # Dremio UI
      - "31010:31010" # Dremio client port
    volumes:
      - dremio_data:/opt/dremio/data # Persistent storage for Dremio data
    environment:
      DREMIO_HEAP_SIZE_MB: 4096
      DREMIO_MAX_DIRECT_MEMORY_MB: 8192
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9047"]
      interval: 30s
      timeout: 10s
      retries: 5


  sedona:
    image: apache/sedona:1.7.2
    container_name: sedona
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
      - "8081:8081"
      - "8085:8085"
      - "8888:8888"
    environment:
      DRIVER_MEM: 6g
      EXECUTOR_MEM: 8g
    volumes:
      - sedona_data:/opt


  # postgres:
  #   image: postgres:15.3-alpine
  #   container_name: postgres-osd
  #   environment:
  #     POSTGRES_USER: prefect
  #     POSTGRES_PASSWORD: prefect
  #     POSTGRES_DB: prefect
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U prefect"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5


  # pgadmin:
  #   image: dpage/pgadmin4:7.7
  #   container_name: pgadmin-osd
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
  #     PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
  #   ports:
  #     - 8080:80
  #   depends_on:
  #     - postgres


  # prefect:
  #   build:
  #     context: ./prefect-server
  #     dockerfile: Dockerfile
  #   container_name: prefect-osd
  #   command: prefect server start --no-ui --host 0.0.0.0
  #   ports:
  #     - 4200:4200
  #   environment:
  #     PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect@postgres/prefect
  #     PREFECT_API_HOST:



  # worker:
  #   build:
  #     context: ./workers
  #     dockerfile: Dockerfile
  #   container_name: worker-osd
  #   environment:
  #     # PREFECT_API_URL: http://prefect:4200
  #     MINIO_ENDPOINT: http://minio:9000
  #     MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
  #     MINIO_SECRET_KEY: $MINIO_SECRET_KEY
  #     MINIO_BUCKET_NAME: $MINIO_BUCKET_NAME
  #     #
  #     AWS_ENDPOINT_URL: http://minio:9000
  #     AWS_ACCESS_KEY_ID: $MINIO_ACCESS_KEY
  #     AWS_SECRET_ACCESS_KEY: $MINIO_SECRET_KEY
  #     AWS_S3_BUCKET: $MINIO_BUCKET_NAME
  #     #
  #     POSTGIS_PASSWORD: $POSTGIS_PASSWORD
  #     POSTGIS_USER: $POSTGIS_USER
  #     POSTGIS_DB: $POSTGIS_DB
  #     POSTGIS_HOST: $POSTGIS_HOST
  #     POSTGIS_PORT: $POSTGIS_PORT
  #     #
  #     START_DATE: $START_DATE
  #   depends_on:
  #     minio:
  #       condition: service_healthy
  #     # prefect:
  #     #   condition: service_healthy



volumes:  
  minio_data:
  dremio_data:
  sedona_data:
